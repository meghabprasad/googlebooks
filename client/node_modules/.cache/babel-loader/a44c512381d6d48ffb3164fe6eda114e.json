{"ast":null,"code":"import _defineProperty from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Megha/Desktop/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Megha/Desktop/googlebooks/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SaveBtn from \"../components/SaveBtn\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      googleBooks: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.saveBook = function (book) {\n      API.saveBook({\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors.join(\" \"),\n        synopsis: _this.state.synopsis\n      }).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title) {\n        API.getGoogleBooks(_this.state.title).then(function (res) {\n          _this.setState({\n            googleBooks: res.data.items\n          });\n\n          console.log(\"State Google Books\", _this.state.googleBooks);\n        });\n        console.log(\"here we are\"); // API.saveBook({\n        //   title: this.state.title,\n        //   author: this.state.author,\n        //   synopsis: this.state.synopsis\n        // })\n        //   .then(res => this.loadBooks())\n        //   .catch(err => console.log(err));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Search by title or keyword\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title or keyword (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(FormBtn // disabled={this.state.title}\n      , {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Submit Book\")), this.state.googleBooks.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.googleBooks.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, book.volumeInfo.title, book.volumeInfo.thumbnail, \"by\", book.volumeInfo.authors), React.createElement(SaveBtn, {\n          onClick: function onClick() {\n            return _this2.saveBook(book);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"No Results to Display\")));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/Megha/Desktop/googlebooks/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","SaveBtn","Books","state","books","googleBooks","title","author","synopsis","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","saveBook","book","volumeInfo","authors","join","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","getGoogleBooks","items","length","map","thumbnail"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SaveBtn from \"../components/SaveBtn\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    googleBooks: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  saveBook = book => {\n    API.saveBook({\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors.join(\" \"),\n      synopsis: this.state.synopsis\n    })\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title) {\n      API.getGoogleBooks(this.state.title)\n        .then(res => {\n          this.setState({ googleBooks: res.data.items})\n            \n            console.log(\"State Google Books\", this.state.googleBooks)\n\n          }\n        );\n        console.log(\"here we are\")\n      // API.saveBook({\n      //   title: this.state.title,\n      //   author: this.state.author,\n      //   synopsis: this.state.synopsis\n      // })\n      //   .then(res => this.loadBooks())\n      //   .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n      <Container fluid>\n            <Jumbotron>\n              <h1>Search by title or keyword</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title or keyword (Required)\"\n              />\n              {/* <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              /> */}\n              {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n              <FormBtn\n                // disabled={this.state.title}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n\n            {this.state.googleBooks.length ? (\n              <List>\n                {this.state.googleBooks.map(book => (\n                  <ListItem key={book.id}>\n                    \n                      <strong>\n                        {book.volumeInfo.title} \n                        {book.volumeInfo.thumbnail}\n                          by \n                        {book.volumeInfo.authors}\n                      </strong>\n                    \n                    {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n                    <SaveBtn onClick={() => this.saveBook(book)}/>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}